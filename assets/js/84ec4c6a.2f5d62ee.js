"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1419],{7085:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>d,default:()=>a,frontMatter:()=>c,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"specification/temporal/event_trigger.schema","title":"Event Trigger","description":"Category: Temporal","source":"@site/docs/specification/temporal/event_trigger.schema.md","sourceDirName":"specification/temporal","slug":"/specification/temporal/event_trigger.schema","permalink":"/cfdl-project/docs/specification/temporal/event_trigger.schema","draft":false,"unlisted":false,"editUrl":"https://github.com/bizarc/cfdl-project/tree/main/website/docs/specification/temporal/event_trigger.schema.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"Recurrence Rule","permalink":"/cfdl-project/docs/specification/temporal/recurrence_rule.schema"},"next":{"title":"Cash Flow","permalink":"/cfdl-project/docs/specification/result/cash-flow.schema"}}');var n=r(4848),i=r(8453);const c={},d="Event Trigger",o={},l=[{value:"Description",id:"description",level:2},{value:"Properties",id:"properties",level:2}];function h(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"event-trigger",children:"Event Trigger"})}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Category"}),": Temporal"]}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Schema File"}),": ",(0,n.jsx)(t.code,{children:"ontology/temporal/event_trigger.schema.yaml"})]}),"\n",(0,n.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,n.jsx)(t.p,{children:"Defines an event-based trigger for rule blocks or logic blocks. Supports assumption changes, value threshold crossings, external events, or custom expressions."}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Schema ID"}),": ",(0,n.jsx)(t.code,{children:"https://cfdl.dev/ontology/temporal/event-trigger.schema.yaml"})]}),"\n",(0,n.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Property"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Required"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"type"})}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"\u2705"}),(0,n.jsx)(t.td,{children:"Type of event trigger."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"assumptionId"})}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"\u274c"}),(0,n.jsx)(t.td,{children:"Identifier of the assumption to monitor (for assumption_change)."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"streamId"})}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"\u274c"}),(0,n.jsx)(t.td,{children:"Identifier of the stream to monitor (for stream_threshold)."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"operator"})}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"\u274c"}),(0,n.jsx)(t.td,{children:"Comparison operator for threshold triggers."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"threshold"})}),(0,n.jsx)(t.td,{children:"Number"}),(0,n.jsx)(t.td,{children:"\u274c"}),(0,n.jsx)(t.td,{children:"Numeric threshold value to compare (for stream_threshold)."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"externalEventName"})}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"\u274c"}),(0,n.jsx)(t.td,{children:"Name or identifier of the external event to listen for (for external_event)."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"expression"})}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"\u274c"}),(0,n.jsx)(t.td,{children:"Custom boolean expression to evaluate (for custom triggers)."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"metadata"})}),(0,n.jsx)(t.td,{children:"Object"}),(0,n.jsx)(t.td,{children:"\u274c"}),(0,n.jsx)(t.td,{children:"Free-form metadata for UI hints, logging, or integration."})]})]})]})]})}function a(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>c,x:()=>d});var s=r(6540);const n={},i=s.createContext(n);function c(e){const t=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:c(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);