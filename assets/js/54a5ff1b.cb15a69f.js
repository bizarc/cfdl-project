"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2771],{673:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>o,contentTitle:()=>d,default:()=>a,frontMatter:()=>n,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"specification/behavior/logic-block.schema","title":"Logic Block","description":"Category: Behavior","source":"@site/docs/specification/behavior/logic-block.schema.md","sourceDirName":"specification/behavior","slug":"/specification/behavior/logic-block.schema","permalink":"/cfdl-project/docs/specification/behavior/logic-block.schema","draft":false,"unlisted":false,"editUrl":"https://github.com/bizarc/cfdl-project/tree/main/website/docs/specification/behavior/logic-block.schema.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"Assumption","permalink":"/cfdl-project/docs/specification/behavior/assumption.schema"},"next":{"title":"Rule Block","permalink":"/cfdl-project/docs/specification/behavior/rule_block.schema"}}');var c=s(4848),r=s(8453);const n={},d="Logic Block",o={},l=[{value:"Description",id:"description",level:2},{value:"Properties",id:"properties",level:2}];function h(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(t.header,{children:(0,c.jsx)(t.h1,{id:"logic-block",children:"Logic Block"})}),"\n",(0,c.jsxs)(t.p,{children:[(0,c.jsx)(t.strong,{children:"Category"}),": Behavior"]}),"\n",(0,c.jsxs)(t.p,{children:[(0,c.jsx)(t.strong,{children:"Schema File"}),": ",(0,c.jsx)(t.code,{children:"ontology/behavior/logic-block.schema.yaml"})]}),"\n",(0,c.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,c.jsx)(t.p,{children:"Encapsulates a custom calculation, validation, trigger, or data-generation step during model execution."}),"\n",(0,c.jsxs)(t.p,{children:[(0,c.jsx)(t.strong,{children:"Schema ID"}),": ",(0,c.jsx)(t.code,{children:"https://cfdl.dev/ontology/behavior/logic-block.schema.yaml"})]}),"\n",(0,c.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,c.jsxs)(t.table,{children:[(0,c.jsx)(t.thead,{children:(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.th,{children:"Property"}),(0,c.jsx)(t.th,{children:"Type"}),(0,c.jsx)(t.th,{children:"Required"}),(0,c.jsx)(t.th,{children:"Description"})]})}),(0,c.jsxs)(t.tbody,{children:[(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:(0,c.jsx)(t.code,{children:"id"})}),(0,c.jsx)(t.td,{children:"String"}),(0,c.jsx)(t.td,{children:"\u2705"}),(0,c.jsx)(t.td,{children:"Unique identifier for this logic block."})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:(0,c.jsx)(t.code,{children:"name"})}),(0,c.jsx)(t.td,{children:"String"}),(0,c.jsx)(t.td,{children:"\u2705"}),(0,c.jsx)(t.td,{children:"Human-readable name of the logic block."})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:(0,c.jsx)(t.code,{children:"description"})}),(0,c.jsx)(t.td,{children:"String"}),(0,c.jsx)(t.td,{children:"\u274c"}),(0,c.jsx)(t.td,{children:"Detailed explanation of the block\u2019s purpose or algorithm."})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:(0,c.jsx)(t.code,{children:"scope"})}),(0,c.jsx)(t.td,{children:"String"}),(0,c.jsx)(t.td,{children:"\u2705"}),(0,c.jsx)(t.td,{children:"Hierarchy level where this block runs."})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:(0,c.jsx)(t.code,{children:"type"})}),(0,c.jsxs)(t.td,{children:["Reference: ",(0,c.jsx)(t.a,{href:"https://cfdl.dev/ontology/common-types.schema.yaml#/definitions/logicBlockType",children:"https://cfdl.dev/ontology/common-types.schema.yaml#/definitions/logicBlockType"})]}),(0,c.jsx)(t.td,{children:"\u2705"}),(0,c.jsx)(t.td,{children:"Function category of this block (calculation, trigger, etc.)."})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:(0,c.jsx)(t.code,{children:"inputs"})}),(0,c.jsx)(t.td,{children:"Array of String"}),(0,c.jsx)(t.td,{children:"\u274c"}),(0,c.jsx)(t.td,{children:"Optional list of input IDs this block consumes (streams, assumptions, or other blocks)."})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:(0,c.jsx)(t.code,{children:"outputs"})}),(0,c.jsx)(t.td,{children:"Array of String"}),(0,c.jsx)(t.td,{children:"\u274c"}),(0,c.jsx)(t.td,{children:"Optional list of output IDs produced by this block (new streams or variables)."})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:(0,c.jsx)(t.code,{children:"executionOrder"})}),(0,c.jsx)(t.td,{children:"Integer"}),(0,c.jsx)(t.td,{children:"\u274c"}),(0,c.jsx)(t.td,{children:"Optional ordering index among peer blocks at the same scope (lower numbers run earlier)."})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:(0,c.jsx)(t.code,{children:"code"})}),(0,c.jsx)(t.td,{children:"String"}),(0,c.jsx)(t.td,{children:"\u2705"}),(0,c.jsx)(t.td,{children:"The code snippet implementing the logic block. It should reference inputs and assign to outputs or perform its side effect."})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:(0,c.jsx)(t.code,{children:"language"})}),(0,c.jsx)(t.td,{children:"String"}),(0,c.jsx)(t.td,{children:"\u274c"}),(0,c.jsx)(t.td,{children:"Language of the code snippet (e.g. 'julia', 'python')."})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:(0,c.jsx)(t.code,{children:"metadata"})}),(0,c.jsx)(t.td,{children:"Object"}),(0,c.jsx)(t.td,{children:"\u274c"}),(0,c.jsx)(t.td,{children:"Free-form metadata for UI hints, versioning, or tags."})]})]})]})]})}function a(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,c.jsx)(t,{...e,children:(0,c.jsx)(h,{...e})}):h(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>n,x:()=>d});var i=s(6540);const c={},r=i.createContext(c);function n(e){const t=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:n(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);