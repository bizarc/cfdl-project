"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[665],{1596:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>d,default:()=>a,frontMatter:()=>c,metadata:()=>n,toc:()=>o});const n=JSON.parse('{"id":"specification/behavior/rule_block.schema","title":"Rule Block","description":"Category: Behavior","source":"@site/docs/specification/behavior/rule_block.schema.md","sourceDirName":"specification/behavior","slug":"/specification/behavior/rule_block.schema","permalink":"/cfdl-project/docs/specification/behavior/rule_block.schema","draft":false,"unlisted":false,"editUrl":"https://github.com/bizarc/cfdl-project/tree/main/website/docs/specification/behavior/rule_block.schema.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"Logic Block","permalink":"/cfdl-project/docs/specification/behavior/logic-block.schema"},"next":{"title":"Market Data","permalink":"/cfdl-project/docs/specification/behavior/market-data.schema"}}');var i=r(4848),s=r(8453);const c={},d="Rule Block",l={},o=[{value:"Description",id:"description",level:2},{value:"Properties",id:"properties",level:2}];function h(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"rule-block",children:"Rule Block"})}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Category"}),": Behavior"]}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Schema File"}),": ",(0,i.jsx)(t.code,{children:"ontology/behavior/rule_block.schema.yaml"})]}),"\n",(0,i.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,i.jsx)(t.p,{children:"Defines a conditional or event-driven operation that fires during model execution. A Rule Block can be triggered by a schedule, an external event, or an evaluated condition, and executes one or more actions (e.g., assigning values, logging, or invoking external services)."}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Schema ID"}),": ",(0,i.jsx)(t.code,{children:"https://cfdl.dev/ontology/behavior/rule-block.schema.yaml"})]}),"\n",(0,i.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Property"}),(0,i.jsx)(t.th,{children:"Type"}),(0,i.jsx)(t.th,{children:"Required"}),(0,i.jsx)(t.th,{children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"id"})}),(0,i.jsx)(t.td,{children:"String"}),(0,i.jsx)(t.td,{children:"\u2705"}),(0,i.jsx)(t.td,{children:"Unique identifier for this rule block."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"name"})}),(0,i.jsx)(t.td,{children:"String"}),(0,i.jsx)(t.td,{children:"\u2705"}),(0,i.jsx)(t.td,{children:"Human-readable name of the rule block."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"description"})}),(0,i.jsx)(t.td,{children:"String"}),(0,i.jsx)(t.td,{children:"\u274c"}),(0,i.jsx)(t.td,{children:"Detailed explanation of the rule\u2019s purpose or logic."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"scope"})}),(0,i.jsx)(t.td,{children:"String"}),(0,i.jsx)(t.td,{children:"\u274c"}),(0,i.jsx)(t.td,{children:"Hierarchy level where this rule runs."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"schedule"})}),(0,i.jsxs)(t.td,{children:["Reference: ",(0,i.jsx)(t.a,{href:"https://cfdl.dev/ontology/temporal/schedule.schema.yaml",children:"https://cfdl.dev/ontology/temporal/schedule.schema.yaml"})]}),(0,i.jsx)(t.td,{children:"\u274c"}),(0,i.jsx)(t.td,{children:"Optional schedule that triggers the rule periodically."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"eventTrigger"})}),(0,i.jsxs)(t.td,{children:["Reference: ",(0,i.jsx)(t.a,{href:"https://cfdl.dev/ontology/temporal/event-trigger.schema.yaml",children:"https://cfdl.dev/ontology/temporal/event-trigger.schema.yaml"})]}),(0,i.jsx)(t.td,{children:"\u274c"}),(0,i.jsx)(t.td,{children:"Optional event definition that triggers the rule when an event occurs."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"condition"})}),(0,i.jsx)(t.td,{children:"String"}),(0,i.jsx)(t.td,{children:"\u274c"}),(0,i.jsx)(t.td,{children:"Optional boolean expression; when it evaluates to true (at or after the scheduled time or event), the action(s) execute."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"action"})}),(0,i.jsx)(t.td,{children:"Unknown"}),(0,i.jsx)(t.td,{children:"\u2705"}),(0,i.jsx)(t.td,{children:"Code snippet or list of statements to execute when the rule fires. Can reference model variables, streams, or external functions."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"metadata"})}),(0,i.jsx)(t.td,{children:"Object"}),(0,i.jsx)(t.td,{children:"\u274c"}),(0,i.jsx)(t.td,{children:"Free-form metadata for UI hints, tagging, or versioning."})]})]})]})]})}function a(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>c,x:()=>d});var n=r(6540);const i={},s=n.createContext(i);function c(e){const t=n.useContext(s);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);